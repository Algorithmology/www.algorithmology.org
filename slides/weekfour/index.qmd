---
title: "Software Testing"
echo: true
description: "How do you establish a confidence in the correctness of a Python program?"
date: "2024-02-05"
date-format: long
author: Gregory M. Kapfhammer
format:
  revealjs:
    theme: default
    css: styles.css
    history: false
    scrollable: true
    transition: slide
    highlight-style: github
    footer: "Algorithmology"
---

# Software programs must work correctly

::: incremental
- **Data structures**: does each structure store data correctly?
- **Algorithm**: does each algorithm produce the correct output?
- **Benchmarks**: is software under study invoked correctly?
- **Data Storage**: do the benchmarks store data correctly?
- **Data Analysis**: does the software analyze data correctly?
:::

## By running a program and checking its output software testing establishes a confidence in its correctness

::: {.fragment .fade-right}

- Steps during software testing:
    - Create an input for the program
    - Setup the program's environment
    - Pass the input to the program
    - Collect the output from the program
    - Compare the output to the expected output

:::

## Type Inference in Python

```{python}
class Doubler:
    def __init__(self, n):
        self._n = 2 * n

    def n(self):
        return self._n

x = Doubler(5)
print(x.n() == 10)
assert(x.n() == 10)
y = Doubler(-4)
print(y.n() == -8)
assert(y.n() == -8)
```

::: {.fragment .fade-left style="margin-top: -0.25em; font-size: 0.9em;"}

- Establishes a confidence in the correctness of the `Doubler` class
- When testing is it better to use `print` or `assert` statements?

:::

## What are the performance trade-offs associated with using objects?

::: {.fragment .fade-right}

- Questions to consider when designing an experiment:
  - Cost of calling a method or a function?
  - Cost of accessing an object's attribute?
  - How quickly can your program process data?
  - What is the space overhead of using objects?
- What data structures are best for your application?
- How do data structures influence algorithm performance?

:::
