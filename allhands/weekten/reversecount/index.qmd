---
author: [Benedek Kaibas, Chloe Bonson, David Gormley, Mordred Boulais, William Wolff, Luke Barker]
title: Investigating the efficiency of computing counting and reversing a string 
page-layout: full
categories: [post, dictionaries, strings]
date: "2024-03-22"
date-format: long
toc: true
---

# Overview

An analysis of the running time and run time of the assorted `reverse_count`
functions implemented by team members.

# Code 

# Modify this to include your code in place of mine - I'll clean up merge conflicts later.

```{python}
# Benedek's implementation of the function reverse_count

def reverse_str(data: str) -> str:
    """Reverse the content of the provided string."""
    # I am just using the simple reverse string method.
    return data[::-1]

def reverse_count(data: str) -> dict:
    """Reverse the content of the provided string and return it in a mapping."""
    return {data: {"count": str(len(data)), "reversed": data[::-1]}}
```

```{python}
import timeit
import functools

# Rough draft of potential analysis script.
performance_list = []
for i in timeit.repeat(
  stmt=functools.partial(reverse_count, "checking!"),
    number=10,
  ):
    performance_list.append(i)
print(
  f"Performance time in seconds:\n {performance_list}"
)
```

# Data

# Include the output of running the two code blocks here, with any analysis you would like to provide

"""
first output:

Performance time in seconds:
 [5.699926987290382e-06, 2.900022082030773e-06, 2.7999049052596092e-06, 2.700020559132099e-06, 2.700020559132099e-06]

second output:

Performance time in seconds:
 [5.599926225841045e-06, 2.900022082030773e-06, 2.800021320581436e-06, 2.900022082030773e-06, 2.6999041438102722e-06]

third output:

Performance time in seconds:
 [7.4999406933784485e-06, 4.00003045797348e-06, 4.699919372797012e-06, 4.400033503770828e-06, 4.200031980872154e-06]

fourth output:

Performance time in seconds:
[7.79994297772646e-06, 3.100023604929447e-06, 2.900022082030773e-06, 2.700020559132099e-06, 2.7999049052596092e-06]

fifth output:

Performance time in seconds:
[6.299931555986404e-06, 3.00002284348011e-06, 2.800021320581436e-06, 2.800021320581436e-06, 2.6999041438102722e-06]
"""
