---
title: Object-Oriented Programming
description: "Understand Basics of Object-Oriented Programming"
date: 2024-01-29
layout: full
toc: true
toc-expand: 3
---

## Exploration

- {{< iconify fa6-solid book-open size=18px >}} Read chapter 3 of [A First
Course on Data Structures in
Python](https://donsheehy.github.io/datastructures/)
- {{< iconify fa6-brands github size=18px >}} Overview objects in `ds2` package
of [donsheehy/datastructures](https://github.com/donsheehy/datastructures)

## Activities

- {{< iconify fa6-solid people-line size=18px >}} **Monday and Wednesday**:
Object-oriented programming
  - Review the goals of object-oriented programming
  - Review the principles of object-oriented programming
    - Abstraction
    - Inheritance
    - Encapsulation
    - Polymorphism
  - Examine source code segments to illustrate trade-offs
- {{< iconify fa6-solid diagram-project size=18px >}} **Thursday**: Continue algorithm engineering project
- {{< iconify game-icons team-idea size=18px >}} **Friday**: Continue the algorithm engineering project

## Project

### Goal

To build and use a Python program, called `containmentchecking`, that runs
benchmarks to measure the performance of `in` for `list`, `tuple`, and `set`,
thereby enabling software engineers to pick the fastest collection for their
program.

### Steps

- Use [Containment Checking](https://github.com/Algorithmology/containment-checking-starter) as your template repository
- Install the project's dependencies using `devenv`
- Follow the instructions to complete the project:
  - **Week 1**: Implement all of the modules in `containmentchecking`
  - **Week 2**: Design, conduct, and document experimental results
- Schedule [office hours](https://www.gregorykapfhammer.com/schedule/) if you
have questions

## Slides

```{=html}
<iframe class="slide-deck" src="../../slides/weekthree/"></iframe>
```

{{< iconify majesticons presentation-play size=18px >}} Full Screen: [Week Three: Object-Oriented Programming in Python](../../slides/weekthree/)
